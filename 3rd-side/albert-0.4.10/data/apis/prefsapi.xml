<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE api SYSTEM "api.dtd">

<api name="Prefs">

  <constant name="PREFS"     val="prefs"/>

  <constant name="SERVER"    val="server"/>
  <constant name="GENERAL"   val="general"/>
  <constant name="PROJECT"   val="project"/>
  <constant name="INFO"      val="info"/>

  <constant name="FORMAT"    val="format"/>
  <constant name="OUTPUT"    val="output"/>

  <constant name="PARSING"   val="parsing"/>
  <constant name="PARSER"    val="parser"/>
  <constant name="PREPROC"   val="preproc"/>
  <constant name="ARG"       val="arg"/>
  <constant name="EXTENSION" val="extension"/>

  <constant name="STYLE"     val="style"/>
  <constant name="SPECIFICS" val="specifics"/>
  <constant name="HYPERSPEC" val="hyperspec"/>

  <class name="Toplevel" elmname="Prefs">
    <var type="ptr"     name="server"/>
    <var type="ptr"     name="general"/>
    <var type="ptrlist" name="projects"/>
    <var type="ptrlist" name="parsing"/>
    <var type="ptrlist" name="output"/>
    <var type="ptrlist" name="style"/>

    <subelem type="ptr"     name="server"  var="server"/>
    <subelem type="ptr"     name="general" var="general"/>
    <subelem type="ptrlist" name="project" var="projects"/>
    <subelem type="ptrlist" name="parsing" var="parsing"/>
    <subelem type="ptrlist" name="output"  var="output"/>
    <subelem type="ptrlist" name="style"   var="style"/>
  </class>

  <class name="Info" elmname="info">
    <doc>See the individual documentation for a class which
    info-fields are understood and how the TYPE, VALUE and INFO fields
    should be filled.</doc>
    
    <var type="string" name="type"/>
    <var type="string" name="value"/>
    <var type="string" name="info"/>
    
    <attr type="string"  name="type"  var="type"/>
    <attr type="string"  name="value" var="value"/>
    <attr type="string"  name="info"  var="info"/>
  </class>

  <class name="Server" elmname="server">
    <doc>Preferences for the server and for how to connect to the server</doc>
    <var type="string"  name="name"/>
    <var type="string"  name="host"/>
    <var type="string"  name="port"/>
    <var type="string"  name="ondemand"/>
    <var type="string"  name="user"/>
    <var type="string"  name="password"/>

    <attr type="string" name="name"     var="name"/>
    <attr type="string" name="host"     var="host"/>
    <attr type="string" name="port"     var="port"/>
    <attr type="string" name="ondemand" var="ondemand"/>
    <attr type="string" name="user"     var="user"/>
    <attr type="string" name="password" var="password"/>
  </class>

  <class name="General" elmname="general">
    <doc>General preferences/information</doc>
    
    <var type="string"  name="hyperspec" doc="URL to the Common Lisp hyperspec."/>
    <var type="string"  name="serveruse" doc="Should server be used? yes|no."/>

    <attr type="string" name="serveruse"  var="serveruse"/>
    <subelem type="string" name="hyperspec"  var="hyperspec"/>
  </class>

  
  <class name="Project" elmname="project">
    <doc>Preferences for a specific project.</doc>
    <var type="string"  name="id" doc="used to refer to the project from other places."/>
    <var type="string"  name="name"/>
    <var type="string"  name="prefsfile"/>
    <var type="ptrlist" name="info"/>

    <attr    type="string"  name="id"         var="id"/>
    <attr    type="string"  name="name"       var="name"/>
    <attr    type="string"  name="prefs-file" var="prefsfile"/>
    <subelem type="ptrlist" name="info"       var="info"/>
    
    <infodoc type="fullname" value="full name of the project">
      <expl>This is used by documenters for pretty docs</expl>
    </infodoc>
    
    <infodoc type="author" value="name of one author"
	     info="email address">
      <expl>This is used by documenters for pretty docs</expl>
    </infodoc>
    
    <infodoc type="version" value="version name or number">
      <expl>This is used by documenters for pretty docs</expl>
    </infodoc>

    <infodoc type="date" value="the wanted date">
      <expl>This lets you configure the date you want e.g on
      documents.</expl>
    </infodoc>
    
  </class>

  <class name="Parsing" elmname="parsing">
    <var     type="ptrlist"  name="extensions"/>
    <subelem type="ptrlist"  name="extension" var="extensions"/>
  </class>

  <class name="Extension" elmname="extension">
    <var type="string"  name="name"/>
    <var type="ptrlist" name="parsers"/>
    <attr    type="string"   name="name"   var="name"/>
    <subelem type="ptrlist"  name="parser" var="parsers"/>
  </class>

  <class name="Parser" elmname="parser">
    <var type="string" name="name"/>
    <var type="stringlist" name="args"/>
    <var type="ptrlist" name="preprocs"/>
    
    <attr    type="string"     name="name"    var="name"/>
    <subelem type="stringlist" name="arg"     var="args"/>
    <subelem type="ptrlist"    name="preproc" var="preprocs"/>
  </class>

  <class name="Preproc" elmname="preproc">
    <var type="string"     name="name"/>
    <var type="stringlist" name="args"/>
    
    <attr    type="string"     name="name"    var="name"/>
    <subelem type="stringlist" name="arg"     var="args"/>
  </class>

  <class name="Output" elmname="output">
    <var type="ptrlist" name="info"/>
    <var type="ptrlist" name="formats"/>
    
    <subelem type="ptrlist" name="info"  var="info"/>
    <subelem type="ptrlist" name="format" var="formats"/>

    <infodoc type="outdir" value="name of a directory">
      <expl>This specifies the general directory for output. It
	can be overrided by individual formats.</expl>
    </infodoc>

  </class>    

  <class name="OutFormat" elmname="format">
    <var type="string"  name="name" doc="Names the format in question."/>
    <var type="ptrlist" name="info"/>
    
    <attr    type="string"  name="name"  var="name"/>
    <subelem type="ptrlist" name="info"  var="info"/>
      
    <infodoc type="outdir" value="name of a directory">
      <expl>This specifies the directory for output for this
      format.</expl> 
    </infodoc>

    <infodoc type="baseurl" value="a legal (base) URL">
      <expl>This specifies the base URL to use when
making links between documents.  Used by e.g HTML.</expl> 
    </infodoc>

    <infodoc type="bgcolour" value="spec for a background-colour">
      <expl>This is translated to e.g a bgcolor attribute in HTML.</expl> 
    </infodoc>

    <infodoc type="textcolour" value="spec for a text-colour">
      <expl>This is translated to e.g a textcolor attribute in HTML.</expl> 
    </infodoc>

    <infodoc type="papersize" value="spec for a papersize">
      <expl>This is translated to a useful value for e.g LaTeX-documents.</expl> 
    </infodoc>

    <infodoc type="fontsize" value="spec for a fontsize">
      <expl>This is translated to a useful value for e.g LaTeX-documents.</expl> 
    </infodoc>

    <infodoc type="bookfile" value="a filename">
      <expl>This filename is used for e.g DocBook book-files or LaTeX reportfiles.</expl> 
    </infodoc>
    
    <infodoc type="generate" value="all">
      <expl>This means that everything possible for the format should be
generated.  The generate type info is dependent on the format being
output and the info-field may be used as an argument.</expl> 
    </infodoc>
    
    <infodoc type="generate" value="book">
      <expl>This means that a book-like document should be generated.  Works with
DocBook now.</expl> 
    </infodoc>
    
    <infodoc type="generate" value="report">
      <expl>This means that a report-like document should be generated.  Not
used yet.</expl> 
    </infodoc>
    
    <infodoc type="generate" value="emacs-lookup">
      <expl>Generate a lookup-file for use with the SDS-interface in
      Emacs.</expl>
    </infodoc>
    
    <infodoc type="generate" value="classhier">
      <expl>Generate a page or seven describing the class hierarchy.</expl> 
    </infodoc>
    
    <infodoc type="generate" value="object-pages">
      <expl>Make pages for individual objects sorted in directories based on type.</expl> 
    </infodoc>

    <infodoc type="generate" value="full-index">
      <expl>Make a linked index for the whole documentation.</expl> 
    </infodoc>

    <infodoc type="generate" value="obj-indexes">
      <expl>Make index-pages for objects of various types.</expl> 
    </infodoc>
    
  </class>    

  <class name="Style" elmname="style">
    <var type="string"  name="name"/>
    <var type="ptrlist" name="info"/>
    <var type="ptrlist" name="specifics"/>
    
    <attr    type="string"  name="name"      var="name"/>
    <subelem type="ptrlist" name="info"      var="info"/>
    <subelem type="ptrlist" name="specifics" var="specifics"/>
  </class>    
  
</api>
