activations.lisp:    (format t "Firing activation ~A" (match->string activation))
#activations.lisp#:    (format t "Firing ~A" (match->string activation))
environment.lisp:					 :test #'match-equal-p))
environment.lisp:      (format t "==> ~A" (match->string match)))))
environment.lisp:      (ext-delete match (agenda environment) :test #'match-equal-p)
environment.lisp:	(format t "<== ~A" (match->string match)))))))
environment.lisp:		:test #'rule-equal-p :key #'match-rule)))
environment.lisp:				       :test #'match-equal-p))
matches.lisp:(defclass match () ((rule :initarg :rule :reader match-rule
matches.lisp:		    (token :initarg :token :reader match-token
matches.lisp:(defmethod match-equal-p ((match1 match) (match2 match))
matches.lisp:  (and (rule-equal-p (match-rule match1)
matches.lisp:		     (match-rule match2))
matches.lisp:       (token-equal-p (match-token match1)
matches.lisp:		      (match-token match2))))
matches.lisp:(defmethod match->string ((match match))
matches.lisp:  (format nil "Activation:~%~A~%~%" (list (match-rule match) (token->list (match-token match)))))
matches.lisp~:(defclass match () ((rule :initarg :rule :reader match-rule
matches.lisp~:		    (token :initarg :token :reader match-token
matches.lisp~:(defmethod match-equal-p ((match1 match) (match2 match))
matches.lisp~:  (and (rule-equal-p (match-rule match1)
matches.lisp~:		     (match-rule match2))
matches.lisp~:       (token-equal-p (match-token match1)
matches.lisp~:		      (match-token match2))))
matches.lisp~:(defmethod match->string ((match match))
matches.lisp~:  (format nil "Activation:~%~A~%~A~%" (match-rule match) (token->list (match-token match))))
#matches.lisp#:(defclass match () ((rule :initarg :rule :reader match-rule
#matches.lisp#:		    (token :initarg :token :reader match-token
#matches.lisp#:(defmethod match-equal-p ((match1 match) (match2 match))
#matches.lisp#:  (and (rule-equal-p (match-rule match1)
#matches.lisp#:		     (match-rule match2))
#matches.lisp#:       (token-equal-p (match-token match1)
#matches.lisp#:		      (match-token match2))))
#matches.lisp#:(defmethod match->string ((match match))
#matches.lisp#:  (format nil "Activation:~%~A~%~%" (list (match-rule match) (token->list (match-token match)))))
