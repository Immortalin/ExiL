=== CHANGES LIST:
facts: supports multiple listing (through start- and end-index and at-most value)
assert: supports multiple assertions
retract: supports multiple retractions,
  supports fact specification through its index
watch: supports (watch all)
unwatch: supports (unwatch all)
defrule: supports optional rule title string
defrule: supports the &fact <- <pattern> notation

added retract-all (to replace clips (retract *))
added ppdefrule
added undeffacts

make-tmpl-object, make-tmpl-fact, make-tmpl-pattern: specification param replaced
  by template and slots-spec, it no longer gets template name, but the template
  object itself - removed cyclic dependency on exil-env:find-template
make-fact, make-pattern, copy-fact: moved to exil-env, as it depends on
  exil-env:find-template
moved logic concerning slots representation in template
  from exil-env:make-tmpl-object
- added (doslots name default template) and (slot-default tmpl-object)
  to templates.lisp
- used these in exil-env:make-tmpl-object
make-tmpl-object now makes clips/nonclips distinction only when extracting value
  from slots-specification (make-tmpl-obj-clips and make-tmpl-object-nonclips
  no longer needed,
conditional moved to get-slot-val)

=== TODO:
modify defrule to support:
  the singleton ? variable
  the ~ (negative) | (alternative) and & (conective) notations
dribble-on, dribble-off
set-break, remove-break, show-breaks
matches (rule) - shows partial matches of rule conditions against working memory
list-deffacts, ppdeffacts
deffact should check, that all variables appearing in RHS are bound in LHS
wildcards
add documentation to classes, functions, methods, macros and slots
  (using :documentation in slot definition)
polish the lispworks gui - dialogs shouldn't be modal, lists should display
object in readable form (as opposed to the unreadable #<> one)

== Text
zminit v textu pomocne nastroje - asdf, quickload
zaradit sekci o BDD/TDD, citovat napr. z The RSpec Book, zminit LIFT a XLUnit

=== CLIPS FEATURES NOT INTENDED TO SUPPORT:
not all clips functions are supported on the RHS (e.g. printout)
template slot types
