EXPORTED:
deftemplate
assert
retract
modify
clear
deffacts
reset
defrule
undefrule
defstrategy
setstrategy
step
halt
run
watch
unwatch

CALLED BY EXPORT:
templates:make-template
patterns:make-pattern
rules:make-rule
activations:activate-rule
environment:add-template
environment:add-fact
environment:rem-fact
environment:reset-environment
environment:add-fact-group
environment:add-rule
environment:find-rule
environment:rem-rule
environment:add-strategy
environment:set-strategy
environment:select-activation
environment:set-watcher
environment:unset-watcher

CALLED BY ENVIRONMENT:
utils:exil-equal-p
rules:rule-equal-p
matches:make-match
matches:match-equal-p
rete:make-rete
rete:add-wme
rete:rem-wme
rete:new-production
rete:remove-production

CALLED BY ACTIVATIONS:
templates:variable-p
base-objects:object-slot
patterns:pattern
patterns:slots
patterns:negated-p
rules:conditions
rules:activations
tokens:token->list
matches:match-rule
matches:match-token

CALLED BY MATCHES:
rules:rule-equal-p
rules:name
tokens:token-equal-p
toknes:token->list

CALLED BY RETE:
almost everyting in core



CYCLIC DEPENDENCIES:
templates:make-tmpl-object <- environment:find-template
export:deftemplate <- environment:add-template
export:deftemplate <- templates:make-tmpl-object

environment:add-fact -> rete:add-wme
rete:add-wme ----> rete:complete-match
rete:complete-match -> environment:add-match

totez s rem-fact/rem-wme, add-production/rem-production

TODO:
rozhodnout viditelnost metod (public, private, package),
  vyznacit ji v kodu i v uml
prepackagovat exil
udelat extra package exil-clips s clisp-compatible makry
